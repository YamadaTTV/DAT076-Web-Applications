import * as SuperTest from "supertest";
import { app } from "./start";
import exp from "constants";

const request = SuperTest.default(app);

test("End-to-end test", async () => {
    //The JSON that is considered to be correct.
    const JSON =
        [
            {
            "id": 1,
            "username": "mphu",
            "email": "mphu@chalmers.se",
            "password": "1234"

            },
            {
                "id": 2,
                "username": "liamm",
                "email": "liamm@chalmers.se",
                "password": "6789"
            },
            {
                "id": 3,
                "username": "rassta",
                "email": "rassta@chalmers.se",
                "password": "1234"
            }
        ];

    //The JSON that is considered to be faulty.
    const JSON2 =
        [
            {
                "id": 1,
                "username": "mphu",
                "email": "mphu@chalmers.se",
                "password": "1234"

            },
            {
                "id": 2,
                "username": "liamm",
                "email": "liamm@chalmers.se",
                "password": "6789"
            },
            {
                "id": 3,
                "username": "rassta",
                "email": "rassta@chalmers.se",
                "password": "1234567"
            }
        ];


    const res1 = await request.post("/user").send({
        "username":"mphu",
        "email":"mphu@chalmers.se",
        "password":"1234"
    });


    //When doing a post, the router returns status code: 201.
    //The body should then have an autogenerated id of 1.
    expect(res1.statusCode).toEqual(201);
    expect(res1.body).toEqual(
        {
            "id": 1,
            "username": "mphu",
            "email": "mphu@chalmers.se",
            "password": "1234"
        }
    );

    const res2 = await request.post("/user").send({
        "username":"liamm",
        "email":"liamm@chalmers.se",
        "password":"6789"
    });

    //When doing a post, the router returns status code: 201.
    //The body should then have an autogenerated id of 2.
    expect(res2.statusCode).toEqual(201);
    expect(res2.body).toEqual(
        {
            "id": 2,
            "username": "liamm",
            "email": "liamm@chalmers.se",
            "password": "6789"
        }
    );

    const res3 = await request.post("/user").send({
        "username":"rassta",
        "email":"rassta@chalmers.se",
        "password":"1234"
    });

    //When doing a post, the router returns status code: 201.
    //The body should then have an autogenerated id of 3.
    expect(res3.statusCode).toEqual(201);
    expect(res3.body).toEqual(
        {
            "id": 3,
            "username": "rassta",
            "email": "rassta@chalmers.se",
            "password": "1234"
        }
    );
    //Expected to be correct since all fields in the JSON is correct.
    const res4 = await request.get("/user");
    expect(res4.statusCode).toEqual(200);
    expect(res4.body).toEqual(JSON);

    //Expected to be faulty since the JSON2 has a wrong password for Rasmus
    const res5 = await request.get("/user");
    expect(res5.statusCode).toEqual(200);
    expect(res5.body).not.toEqual(JSON2);
});